version: '2'

services:
  llm_router_test:
    build: .
    volumes:
      - ../models/chat/mock.json:/opt/llm_router_tests/mock.json:ro
    depends_on:
      llm_router:
        condition: service_healthy
      cache:
        condition: service_healthy

  llm_router:
    build: 
      context: ../
      dockerfile: dockerfiles/Dockerfile.dev
    user: root
    restart: always
    env_file:
      - ../config/.env.template
    ports:
      - "8000:8000"
    volumes:
      - ../.data/llm_router/logs:/var/log/llm_router
      - ../models/:/opt/models/:ro
      - ../.data/target:/opt/llm_router/target/
    depends_on:
      cache:
        condition: service_healthy
    networks:
        default:
        internal:
    healthcheck:
      test: ["CMD", "curl","-f","http://localhost:8000/health"]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55

  cache:
    image: redis:4
    restart: always
    volumes:
    - ../.data/redis:/data
    networks:
        internal:
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55

  dev_vault:
    image: hashicorp/vault:1.14
    container_name: dev_vault
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -dev -dev-root-token-id="root" -dev-listen-address="0.0.0.0:8200"

  dev_vault_init:
    build: 
      context: ../dockerfiles/
      dockerfile: Dockerfile.vaultsecrets
    volumes:
      - ../config/.env_keys.json:/secrets/llm-vault.json:ro
    env_file:
      - ../config/.env_keys
    environment:
      - VAULT_ADDR=http://dev_vault:8200
      - VAULT_TOKEN=root
    depends_on:
      - dev_vault

networks:
    default:
    internal:
        internal: true